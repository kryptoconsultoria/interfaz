"""
Django settings for Automatizaciones project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from django.contrib.messages import constants as messages
import os
import dj_database_url
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
os.environ['GDAL_LIBRARY_PATH'] = r'C:\OSGeo4W64\bin\gdal306.dll'  # Ajusta según la versión instalada


# Inicializa django-environ
env = environ.Env(
    DEBUG=(bool, False),
    SECRET_KEY=(str, 'django-insecure-default-key'),
)

# Carga .env local si existe (útil en desarrollo)
env_path = BASE_DIR / '.env'
if env_path.exists():
    environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Configuración básica
DEBUG = env('DEBUG')
SECRET_KEY = env('SECRET_KEY')


# Urls de sharepoint
SHAREPOINT_BASE_URL_MEDIOS = 'Innovación y Tecnología/IntegrIA/Proyectos automatización/07 Medios Magnéticos/'

# Configuracion de sharepoint
FASTAPI_URL = env("FASTAPI_URL")
ID_CLIENTE = env("CLIENT_ID")
SECRETO_CLIENTE = env("CLIENT_SECRET")
ID_TENANT = env("TENANT_ID")
DOMINIO = env("DOMAIN")  # Ejemplo: "contoso.sharepoint.com"
NOMBRE_SITIO = env("SITE_NAME")  # Ejemplo: "contoso.sharepoint.com"
TOKEN_ACTUALIZACION = env("REFRESH_TOKEN")  # Ejemplo: "obtener token"


# Origenes permitidos
ALLOWED_ORIGINS = env.list("ALLOWED_ORIGINS", default=[])
print(ALLOWED_ORIGINS)
CORS_ALLOWED_ORIGINS = ALLOWED_ORIGINS
CSRF_TRUSTED_ORIGINS = ALLOWED_ORIGINS
ALLOWED_HOSTS = ALLOWED_ORIGINS



# Cambio de idioma
LANGUAGE_CODE = 'es'
USE_I18N = True
USE_L10N = True


# Lista de aplicaciones
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_vite',
    'panel_principal',
    'medios_magneticos'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware'

]

ROOT_URLCONF = 'Automatizaciones.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.request'
            ],
        },
    },
]

WSGI_APPLICATION = 'Automatizaciones.wsgi.application'

# Implementación de base de datos
# https://docs.djangoproject.com/en/5.1/ref/settings/
DATABASES = {
    'default': dj_database_url.config(
        env='DATABASE_URL_DEFAULT',
        conn_max_age=600,
        conn_health_checks=True
    ),
    'admin_db': dj_database_url.config(
        env='DATABASE_URL_ADMIN',
        conn_max_age=600,
        conn_health_checks=True
    ),
    'medios_magneticos_db': dj_database_url.config(
        env='DATABASE_URL_MEDIOS',
        conn_max_age=600,
        conn_health_checks=True
    ),
}


DATABASE_ROUTERS = ['Automatizaciones.routers.medios_magneticos.MediosMagneticosRouter',
                    'Automatizaciones.routers.django_apps_router.DjangoAppsRouter']

# Validacion Contraseña
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# redirección de login
LOGIN_REDIRECT_URL = '/panel_principal/'
LOGIN_URL = '/login/'
LOGOUT_REDIRECT_URL = '/'

# Correo para recuperar contraseña
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # Cambia esto dependiendo de tu proveedor de correo
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'tu_correo@gmail.com'  # Tu dirección de correo
EMAIL_HOST_PASSWORD = 'tu_password'  # Tu contraseña (revisa usar contraseñas de aplicación en Gmail)
DEFAULT_FROM_EMAIL = 'webmaster@localhost'


# Needed for 'debug' to be available inside templates.
# https://docs.djangoproject.com/en/3.2/ref/templates/api/#django-template-context-processors-debug
INTERNAL_IPS = ['127.0.0.1']


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
# Directorios adicionales donde Django buscará archivos estáticos
STATICFILES_DIRS = [
    BASE_DIR / "static"
]
STATIC_ROOT = BASE_DIR / 'staticfiles'


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Configuración de django-vite
# Vite App Dir: point it to the folder your vite app is in.
VITE_APP_DIR = BASE_DIR / "src"

DJANGO_VITE = {
    "default": {
        "dev_mode": DEBUG,  # True usa servidor Vite; False usa assets compilados
        "manifest_path": BASE_DIR / 'static' / '.vite' /'manifest.json',
        "dev_server_host": "127.0.0.1",
        "dev_server_port": 5173,
        "static_url_prefix": ''  # si quieres agrupar bajo /static/
    }
}

MESSAGE_TAGS = {
    messages.ERROR: 'alert-danger',
}
MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'